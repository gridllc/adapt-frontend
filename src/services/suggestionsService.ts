
import { supabase } from '@/services/apiClient';
import type { Suggestion } from '@/types';

const TABLE_NAME = 'suggestions';

/**
 * Submits a new suggestion for a specific module and step to the database.
 * @param {string} moduleId The ID of the module.
 * @param {number} stepIndex The index of the step the suggestion applies to.
 * @param {string} suggestionText The text content of the suggestion.
 */
export const submitSuggestion = async (moduleId: string, stepIndex: number, suggestionText: string): Promise<void> => {
    const newSuggestion = {
        // id is auto-generated by db
        module_id: moduleId,
        step_index: stepIndex,
        text: suggestionText,
        status: 'pending' as const,
    };

    const { error } = await supabase.from(TABLE_NAME).insert(newSuggestion);

    if (error) {
        console.error("Error submitting suggestion:", error);
        throw error;
    }
};

/**
 * Retrieves all suggestions for a specific module from the database.
 * @param {string} moduleId The ID of the module to get suggestions for.
 * @returns {Promise<Suggestion[]>} An array of suggestions for the specified module.
 */
export const getSuggestionsForModule = async (moduleId: string): Promise<Suggestion[]> => {
    const { data, error } = await supabase
        .from(TABLE_NAME)
        .select('*')
        .eq('module_id', moduleId);

    if (error) {
        console.error("Error fetching suggestions:", error);
        throw error;
    }

    // Map from snake_case (db) to camelCase (ts type)
    return data.map(s => ({
        id: s.id,
        moduleId: s.module_id,
        stepIndex: s.step_index,
        text: s.text,
        status: s.status,
    }));
};

/**
 * Deletes a suggestion by its ID from the database.
 * @param {string} suggestionId The ID of the suggestion to delete.
 */
export const deleteSuggestion = async (suggestionId: string): Promise<void> => {
    const { error } = await supabase
        .from(TABLE_NAME)
        .delete()
        .eq('id', suggestionId);

    if (error) {
        console.error(`Error deleting suggestion ${suggestionId}:`, error);
        throw error;
    }
};